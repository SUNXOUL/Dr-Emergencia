// <auto-generated />
using System;
using DrEmergencias;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DrEmergencias.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20230203095958_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("DrEmergencias.Emergencia", b =>
                {
                    b.Property<int>("OrdenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Antecedentes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("AtencionesPrevias")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Coprologico")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Diagnostico")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Donde")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmergenciaID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Especifique")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Ex_Orina")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FC")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FR")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<int>("Glisemia")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Hemogramas")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Hora")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Imagenes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("M_Consulta")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MedicoBase")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Peso")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TA")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TyM")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("OrdenID");

                    b.ToTable("Emergencia");
                });

            modelBuilder.Entity("DrEmergencias.EmergenciaA", b =>
                {
                    b.Property<int>("OrdenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ARS")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Abdomen")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Antecedentes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("AtencionesPrevias")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cabeza")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Coprologico")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Corazon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cuello")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Diagnostico")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Donde")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("E_Inferiores")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("E_Superiores")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmergenciaID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Especifique")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Ex_Orina")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FC")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FR")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<int>("Glisemia")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Hemogramas")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Hora")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Imagenes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("M_Consulta")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MedicoBase")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NSS")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Peso")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Pulmones")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TA")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Temperatura")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Torax")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TyM")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("OrdenID");

                    b.ToTable("EmergenciaA");
                });

            modelBuilder.Entity("DrEmergencias.Paciente", b =>
                {
                    b.Property<int>("OrdenID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Edad")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechadeNacimiento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PacienteID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Provincia")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SegundoNombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("sexo")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrdenID");

                    b.ToTable("Paciente");
                });

            modelBuilder.Entity("DrEmergencias.Paciente", b =>
                {
                    b.HasOne("DrEmergencias.Emergencia", null)
                        .WithMany("Paciente")
                        .HasForeignKey("OrdenID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DrEmergencias.EmergenciaA", null)
                        .WithMany("Paciente")
                        .HasForeignKey("OrdenID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DrEmergencias.Emergencia", b =>
                {
                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("DrEmergencias.EmergenciaA", b =>
                {
                    b.Navigation("Paciente");
                });
#pragma warning restore 612, 618
        }
    }
}
