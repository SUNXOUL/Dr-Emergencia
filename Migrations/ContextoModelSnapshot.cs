// <auto-generated />
using System;
using DrEmergencias;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DrEmergencias.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DrEmergencias.Articulo", b =>
                {
                    b.Property<int>("ArticuloID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArticuloID"));

                    b.Property<double?>("Costo")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Existencia")
                        .HasColumnType("int");

                    b.Property<int>("Num_Reorden")
                        .HasColumnType("int");

                    b.Property<double?>("Precio")
                        .HasColumnType("float");

                    b.Property<int>("SuplidorId")
                        .HasColumnType("int");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("ArticuloID");

                    b.ToTable("Articulos");
                });

            modelBuilder.Entity("DrEmergencias.ComprasDetalle", b =>
                {
                    b.Property<int>("DetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetalleId"));

                    b.Property<int>("ArticuloId")
                        .HasColumnType("int");

                    b.Property<int>("CompraId")
                        .HasColumnType("int");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.Property<int?>("cantidad")
                        .HasColumnType("int");

                    b.Property<double?>("costo")
                        .HasColumnType("float");

                    b.HasKey("DetalleId");

                    b.HasIndex("CompraId");

                    b.ToTable("ComprasDetalle");
                });

            modelBuilder.Entity("DrEmergencias.Emergencia", b =>
                {
                    b.Property<int>("OrdenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrdenID"));

                    b.Property<string>("Antecedentes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AtencionesPrevias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Coprologico")
                        .HasColumnType("int");

                    b.Property<string>("Diagnostico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Donde")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergenciaID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Especifique")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Ex_Orina")
                        .HasColumnType("int");

                    b.Property<int?>("FC")
                        .HasColumnType("int");

                    b.Property<int?>("FR")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Glisemia")
                        .HasColumnType("int");

                    b.Property<int?>("Hemogramas")
                        .HasColumnType("int");

                    b.Property<int?>("Imagenes")
                        .HasColumnType("int");

                    b.Property<string>("M_Consulta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicoBase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PacienteID")
                        .HasColumnType("int");

                    b.Property<int?>("Peso")
                        .HasColumnType("int");

                    b.Property<int?>("TA")
                        .HasColumnType("int");

                    b.Property<int?>("Temperatura")
                        .HasColumnType("int");

                    b.Property<string>("TyM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("OrdenID");

                    b.ToTable("Emergencias");
                });

            modelBuilder.Entity("DrEmergencias.EmergenciaA", b =>
                {
                    b.Property<int>("OrdenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrdenID"));

                    b.Property<string>("ARS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Abdomen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Antecedentes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AtencionesPrevias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cabeza")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Coprologico")
                        .HasColumnType("int");

                    b.Property<string>("Corazon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cuello")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diagnostico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Donde")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("E_Inferiores")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("E_Superiores")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergenciaID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Especifique")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Ex_Orina")
                        .HasColumnType("int");

                    b.Property<int?>("FC")
                        .HasColumnType("int");

                    b.Property<int?>("FR")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Glisemia")
                        .HasColumnType("int");

                    b.Property<int?>("Hemogramas")
                        .HasColumnType("int");

                    b.Property<int?>("Imagenes")
                        .HasColumnType("int");

                    b.Property<string>("M_Consulta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicoBase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NSS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PacienteID")
                        .HasColumnType("int");

                    b.Property<int?>("Peso")
                        .HasColumnType("int");

                    b.Property<string>("Pulmones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TA")
                        .HasColumnType("int");

                    b.Property<int?>("Temperatura")
                        .HasColumnType("int");

                    b.Property<string>("Torax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TyM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("OrdenID");

                    b.ToTable("EmergenciaAs");
                });

            modelBuilder.Entity("DrEmergencias.Entrada", b =>
                {
                    b.Property<int>("OrdenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrdenID"));

                    b.Property<int>("ArticuloID")
                        .HasColumnType("int");

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Razon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.Property<int?>("cantidad_Resultante")
                        .HasColumnType("int");

                    b.Property<int?>("cantidad_anterior")
                        .HasColumnType("int");

                    b.HasKey("OrdenID");

                    b.ToTable("Entradas");
                });

            modelBuilder.Entity("DrEmergencias.OrdenCompras", b =>
                {
                    b.Property<int>("CompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompraId"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("SuplidorId")
                        .HasColumnType("int");

                    b.Property<double?>("Total")
                        .HasColumnType("float");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("CompraId");

                    b.ToTable("OrdenCompras");
                });

            modelBuilder.Entity("DrEmergencias.Paciente", b =>
                {
                    b.Property<int>("PacienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PacienteID"));

                    b.Property<string>("Alergia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CedulaTutor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Edad")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("FechadeNacimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Municipio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ocupacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provincia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tutor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("PacienteID");

                    b.ToTable("Pacientes");

                    b.HasData(
                        new
                        {
                            PacienteID = 1,
                            Cedula = "809-7877890-1",
                            Direccion = "Nagua,RD",
                            Edad = 19,
                            FechaRegistro = new DateTime(2023, 3, 24, 13, 8, 17, 325, DateTimeKind.Local).AddTicks(1497),
                            FechadeNacimiento = "3/8/2003",
                            Municipio = "Nagua",
                            Ocupacion = "DBA",
                            PrimerApellido = "Reynoso",
                            PrimerNombre = "Cesar",
                            Provincia = "MTS",
                            SegundoNombre = "Jose",
                            Sexo = "Hombre",
                            Telefono = "829-567-9072",
                            Visible = true
                        },
                        new
                        {
                            PacienteID = 2,
                            Cedula = "222-3377890-3",
                            Direccion = "Pinia 3",
                            Edad = 17,
                            FechaRegistro = new DateTime(2023, 3, 24, 13, 8, 17, 325, DateTimeKind.Local).AddTicks(1524),
                            FechadeNacimiento = "3/8/2005",
                            Municipio = "SFM",
                            Ocupacion = "Agricultor",
                            PrimerApellido = "Sanchez",
                            PrimerNombre = "Em",
                            Provincia = "Duarte",
                            SegundoNombre = "Ramon",
                            Sexo = "Hombre",
                            Telefono = "849-343-0000",
                            Visible = true
                        },
                        new
                        {
                            PacienteID = 3,
                            Cedula = "332-4447822-2",
                            Direccion = "SALCEDO, LAS cuevas",
                            Edad = 23,
                            FechaRegistro = new DateTime(2023, 3, 24, 13, 8, 17, 325, DateTimeKind.Local).AddTicks(1527),
                            FechadeNacimiento = "3/8/2000",
                            Municipio = "Salcedo",
                            Ocupacion = "Estilista",
                            PrimerApellido = "Almonte",
                            PrimerNombre = "Camila",
                            Provincia = "Duarte",
                            SegundoApellido = "Castellanos",
                            SegundoNombre = "",
                            Sexo = "Mujer",
                            Telefono = "787-567-9072",
                            Visible = true
                        },
                        new
                        {
                            PacienteID = 4,
                            Cedula = "402-7877890-1",
                            Direccion = "Cabrera, La entrada",
                            Edad = 33,
                            FechaRegistro = new DateTime(2023, 3, 24, 13, 8, 17, 325, DateTimeKind.Local).AddTicks(1529),
                            FechadeNacimiento = "3/8/1990",
                            Municipio = "Cabrera",
                            Ocupacion = "Civil Engenieer",
                            PrimerApellido = "Rodriguez",
                            PrimerNombre = "Kinsgton",
                            Provincia = "MTS",
                            SegundoNombre = "Elsmon",
                            Sexo = "Hombre",
                            Telefono = "829-337-9712",
                            Visible = true
                        },
                        new
                        {
                            PacienteID = 5,
                            Cedula = "888-7899890-1",
                            Direccion = "Spain, MALLORCA",
                            Edad = 26,
                            FechaRegistro = new DateTime(2023, 3, 24, 13, 8, 17, 325, DateTimeKind.Local).AddTicks(1532),
                            FechadeNacimiento = "3/8/1997",
                            Municipio = "N",
                            Ocupacion = "Analista de sistemas",
                            PrimerApellido = "Lopez",
                            PrimerNombre = "Jeison",
                            Provincia = "N",
                            SegundoApellido = "Javier",
                            SegundoNombre = "Lo",
                            Sexo = "Hombre",
                            Telefono = "829-567-7777",
                            Visible = true
                        },
                        new
                        {
                            PacienteID = 6,
                            Cedula = "867-1877111-1",
                            Direccion = "USA, CANADA",
                            Edad = 20,
                            FechaRegistro = new DateTime(2023, 3, 24, 13, 8, 17, 325, DateTimeKind.Local).AddTicks(1534),
                            FechadeNacimiento = "3/8/2002",
                            Municipio = "N",
                            Ocupacion = "Enterprise ADMIN",
                            PrimerApellido = "JULIENS",
                            PrimerNombre = "Yoland",
                            Provincia = "N",
                            SegundoNombre = "Ves",
                            Sexo = "Mujer",
                            Telefono = "829-567-8890",
                            Visible = true
                        },
                        new
                        {
                            PacienteID = 7,
                            Cedula = "222-1111111-1",
                            Direccion = "France, Paris",
                            Edad = 18,
                            FechaRegistro = new DateTime(2023, 3, 24, 13, 8, 17, 325, DateTimeKind.Local).AddTicks(1536),
                            FechadeNacimiento = "3/8/2004",
                            Municipio = "N",
                            Ocupacion = "Senior Dev",
                            PrimerApellido = "Estrella",
                            PrimerNombre = "Holland",
                            Provincia = "N",
                            SegundoNombre = "Gab",
                            Sexo = "Hombre",
                            Telefono = "878-567-9072",
                            Visible = true
                        },
                        new
                        {
                            PacienteID = 8,
                            Cedula = "666-7877890-1",
                            Direccion = "Nagua,RD",
                            Edad = 19,
                            FechaRegistro = new DateTime(2023, 3, 24, 13, 8, 17, 325, DateTimeKind.Local).AddTicks(1538),
                            FechadeNacimiento = "3/8/2003",
                            Municipio = "Nagua",
                            Ocupacion = "Alquimista",
                            PrimerApellido = "Martinez",
                            PrimerNombre = "Nou",
                            Provincia = "MTS",
                            SegundoNombre = "ester",
                            Sexo = "Mujer",
                            Telefono = "829-567-333",
                            Visible = true
                        },
                        new
                        {
                            PacienteID = 9,
                            Cedula = "123-7877890-1",
                            Direccion = "Nagua,RD",
                            Edad = 19,
                            FechaRegistro = new DateTime(2023, 3, 24, 13, 8, 17, 325, DateTimeKind.Local).AddTicks(1540),
                            FechadeNacimiento = "3/8/2003",
                            Municipio = "Nagua",
                            Ocupacion = "Dto",
                            PrimerApellido = "Ilstens",
                            PrimerNombre = "C",
                            Provincia = "MTS",
                            SegundoNombre = "James",
                            Sexo = "Hombre",
                            Telefono = "119-227-3372",
                            Visible = true
                        },
                        new
                        {
                            PacienteID = 10,
                            Cedula = "804-4877890-4",
                            Direccion = "Nagua,RD",
                            Edad = 19,
                            FechaRegistro = new DateTime(2023, 3, 24, 13, 8, 17, 325, DateTimeKind.Local).AddTicks(1542),
                            FechadeNacimiento = "3/8/2003",
                            Municipio = "Nagua",
                            Ocupacion = "DBA",
                            PrimerApellido = "Fernandez",
                            PrimerNombre = "Amanda",
                            Provincia = "MTS",
                            SegundoNombre = "",
                            Sexo = "Mujer",
                            Telefono = "829-567-4444",
                            Visible = true
                        });
                });

            modelBuilder.Entity("DrEmergencias.Salida", b =>
                {
                    b.Property<int>("OrdenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrdenID"));

                    b.Property<int>("ArticuloID")
                        .HasColumnType("int");

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Razon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.Property<int?>("cantidad_Resultante")
                        .HasColumnType("int");

                    b.Property<int?>("cantidad_anterior")
                        .HasColumnType("int");

                    b.HasKey("OrdenID");

                    b.ToTable("Salidas");
                });

            modelBuilder.Entity("DrEmergencias.Suplidor", b =>
                {
                    b.Property<int>("SuplidorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SuplidorID"));

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("SuplidorID");

                    b.ToTable("Suplidores");

                    b.HasData(
                        new
                        {
                            SuplidorID = 1,
                            Contacto = "829-787-5366",
                            FechaRegistro = new DateTime(2023, 3, 24, 13, 8, 17, 325, DateTimeKind.Local).AddTicks(1759),
                            Nombre = "GBC Enterprise",
                            Visible = true
                        },
                        new
                        {
                            SuplidorID = 2,
                            Contacto = "809-123-9933",
                            FechaRegistro = new DateTime(2023, 3, 24, 13, 8, 17, 325, DateTimeKind.Local).AddTicks(1762),
                            Nombre = "FarmaSalud",
                            Visible = true
                        },
                        new
                        {
                            SuplidorID = 3,
                            Contacto = "829-863-5107",
                            FechaRegistro = new DateTime(2023, 3, 24, 13, 8, 17, 325, DateTimeKind.Local).AddTicks(1763),
                            Nombre = "Minoxidil",
                            Visible = true
                        });
                });

            modelBuilder.Entity("DrEmergencias.ComprasDetalle", b =>
                {
                    b.HasOne("DrEmergencias.OrdenCompras", null)
                        .WithMany("Detalle")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DrEmergencias.OrdenCompras", b =>
                {
                    b.Navigation("Detalle");
                });
#pragma warning restore 612, 618
        }
    }
}
