@page "/R_Articulo"

@inject NotificationService notificationService
@inject ArticuloBLL ArticuloBLL
@inject SuplidorBLL suplidores


<head>
    <style>
        .Entrada {
            display: inline-block;
            padding: 5px;
            align-items: center;
        }

        .Entrada input {
            border-radius: 50px;
            background-color: #D9D9D9;
            border-color: #D9D9D9;
            border: 15px;
            margin: 5px;
        }

        .Entrada label {
            margin: 5px;
        }

        .Entrada textarea {
            background-color: #D9D9D9;
            border-color: #D9D9D9;
            border-radius: 15px;
            width: 100%;
        }

        .Entrada select {
            width: 200px;
            height: 35px;
            border-radius: 50px;
            background-color: #D9D9D9;
            border-color: #D9D9D9;
            border: 15px;
            margin: 5px;
        }


        body {
            background-color: white;
        }
    </style>
</head>

<body>
    

<h1>Registrar Articulo</h1>


    <div class="Entrada">
        <label for="Descripcion">Descripcion:</label>
        <RadzenTextBox  name="Descripcion" @bind-Value="articulo.Descripcion"/>
    </div>
    <div class="Entrada">
        <label for="Costo">Costo:</label>
        <RadzenNumeric  ShowUpDown="false" style="border-radius: 50px; background-color: #D9D9D9; border-color: #D9D9D9; border: 15px; margin: 5px;"  name="Costo" @bind-Value="articulo.Costo"/>
    </div>
    <div class="col-4">
                        
                        <RadzenDropDown  AllowClear="true" TValue="int"
                            FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowFiltering="true"
                            class="w-100" Placeholder="Suplidor"  Data="suplidores.GetList()" TextProperty="Nombre"
                            @bind-Value=@articulo.SuplidorId ValueProperty="SuplidorID" style="border-radius: 50px; background-color: #D9D9D9; border-color: #D9D9D9; border: 15px; margin: 5px;"
                            />
                            
                    </div>

    <center>
        <button type="button" class="btn btn-primary"
            style="padding-left: 50px;padding-right: 50px; border-radius:50px; Background-Color:#3AB5F4; border-color:#3AB5F4; margin:10px;"
            @onclick="Guardar">Registrar</button>
    </center>


</body>
@code {
    public Articulo articulo { get; set; } = new Articulo();
    
    protected override void OnInitialized()
    {

    }

    void ShowNotification(NotificationMessage message)
    {
        notificationService.Notify(message);
    }

    private void Buscar()
    {
        var ArticuloEncontrado = ArticuloBLL.Buscar(articulo.ArticuloID);
        if (ArticuloEncontrado != null)
        {
            Console.WriteLine($"Se encontro una ocupacion con el ID{this.articulo.ArticuloID}");
            this.articulo = ArticuloEncontrado;

        }
        else
        {
            Nuevo();
            Console.WriteLine("Id no existente");
        }
    }


    public void Nuevo()
    {
        this.articulo = new Articulo();
    }

    public void Guardar()
    {
        if(Validar() && this.articulo.SuplidorId > 0)
        {
            if(ArticuloBLL.Guardar(this.articulo))
            {
                this.Nuevo();
                ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Registro Actualizado", Detail = "Guardado con Exito", Duration = 4000 });
            }
        }
        else
        {
            ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Error de Registro", Detail = "Campos Vacios o mal asignados", Duration = 4000 });

        }
        //Console.WriteLine("Campos no validos o no completados");
    }

        public bool Validar()
        {
        if(this.articulo.Descripcion != null && this.articulo.Costo != null && this.articulo.SuplidorId != null)
        {
            System.Console.WriteLine("Pase 1");
                return true;
        }
        else
        {
            return false;
        }
    }
}
