@page "/R_Compras"
@page "/R_Compras/{CompraId:int}"



@inject OrdenComprasBLL compras
@inject ArticuloBLL articulos

<PageTitle>Registro de compras.</PageTitle>

<head>
    <style>
        .hidden{
            display: none;
        }

        .form-select{
            border: none;
            width: 150px;
        }
        .form-floating {
            width: 15%;
        }
            .Entrada{
        display: flex;
        padding: 5px;
        align-items: center;
        
    }
    .Entrada input{
        border-radius: 50px;
        background-color:#D9D9D9;
        border-color: #D9D9D9;
        border: 15px;
        margin: 5px;
        width: 100%;
    }
    .Entrada label
    {
        margin: 5px;
    }
    .Entrada textarea{
        background-color:#D9D9D9;
        border-color: #D9D9D9;
        border-radius: 15px;
        width: 100%;
    }

    </style>
</head>

<body>
   
    <RadzenCard >
        <RadzenStack>
            
                
            <div  class="d-flex justify-content-between">
                <div class="Entrada">
                    <div class="input-group">
                        <RadzenLabel>CompraId:</RadzenLabel>
                        <RadzenNumeric ShowUpDown="false" style=" background-color: #D9D9D9; border-color: #D9D9D9;" @bind-Value="compra.CompraId"/>
                        <RadzenButton ButtonStyle="ButtonStyle.Secondary" Click="Buscar"><RadzenIcon Icon="find_replace"/></RadzenButton>
                    </div>
                </div>
                    
                <br>
                <div>
                    <div class="Entrada ">
                        <div class="input-group ">
                            <RadzenLabel >Fecha</RadzenLabel>
                            <RadzenDatePicker @bind-Value=@compra.FechaCompra ShowTime="true" HourFormat="12" DateFormat="MM/dd/yyyy h:mm tt" Name="Fecha" />
                            <RadzenRequiredValidator Component="Fecha" Text="Nombre es Campo Requerido" Popup=true Style="position: absolute"/>
                        </div>
                    </div>
                </div>

            </div>
            <div class="row">
                <div  class="Entrada col-2">
                 <RadzenDropDown  AllowClear="true" TValue="int" Name="Articulo"
                             FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowFiltering="true"
                             class="w-100" Placeholder="Articulo"  Data="articulos.GetList()" TextProperty="Descripcion"
                             @bind-value=@detalle.ArticuloId ValueProperty="ArticuloID" style="border-radius: 25px; background-color: #D9D9D9; border-color: #D9D9D9; border: 15px; margin: 3px; height:40px"
                             />
                </div>
                <div class="Entrada col-2">
                    <RadzenNumeric  style=" background-color: #D9D9D9; border-color: #D9D9D9;" @bind-Value="detalle.cantidad"></RadzenNumeric>
                </div>
                <div class="Entrada col-1">
                    <RadzenButton ButtonStyle="ButtonStyle.Secondary" Click="AgregarDetalle"><RadzenIcon Icon="playlist_add"/></RadzenButton>
                </div>
               
            </div>
            

        </RadzenStack>
        <RadzenCard class=" rz-shadow-0 rz-border-radius-0 rz-p-8" style="margin: 1rem calc(-1 * var(--rz-card-padding));">
            
            <table class="table table-striped" style="backgroud-color:white">
                <thead>
                    <tr>
                        <th scope="col">#CompraId</th>
                        <th scope="col">#ArticuloId</th>
                        <th scope="col">Articulo</th>
                        <th scope="col">Costo</th>
                        <th scope="col">Cantidad</th>
                        <th scope="col">Importe</th>
                    </tr>
                </thead>
                <tbody>
                    
                        @foreach(var item in this.compra.Detalle)
                        {
                            <tr>
                            <td>@item.CompraId</td>
                            <td>@item.ArticuloId</td>
                            <td>@articulos.Buscar(item.ArticuloId).Descripcion</td>
                            <td>@item.costo</td>
                            <td>@item.cantidad</td>
                            <td>@item.Importe</td>
                            </tr>
                        }
                
                </tbody>
            </table>
           <div class="row d-flex justify-content-end">
                <div class="Entrada col-3">
                    <label>Total</label>
                    <input disabled="true" @bind-value="compra.Total">
                </div>
            </div>


        </RadzenCard>
        <RadzenStack>
            <center>
                <button type="button" class="btn btn-primary" style="padding-left: 50px;padding-right: 50px; border-radius:50px; Background-Color:#3AB5F4; border-color:#3AB5F4; margin:10px;"@onclick="Guardar" >Registrar</button>
                <button type="button" class="btn btn-danger" style="padding-left: 50px;padding-right: 50px; border-radius:50px; margin:10px;" @onclick="Eliminar">Eliminar</button>
             </center>
        </RadzenStack>
    </RadzenCard>

    
    
    
</body>


@code
{
    [Parameter]
    public int CompraId {get; set;}

    public OrdenCompras compra {get; set;} = new OrdenCompras();

    public ComprasDetalle detalle {get; set;} = new ComprasDetalle();

    public List<Articulo> L_Articulos {get; set;} = new List<Articulo>();
    
    
    protected override void OnInitialized()
    {
        L_Articulos = articulos.GetList();

        if(CompraId > 0)
        {
            this.compra.CompraId = CompraId;
            Buscar();
        }
    }

    void Buscar()
    {
        var CompraEncontrada = compras.Buscar(compra.CompraId);
        

        if(CompraEncontrada != null)
        {
            this.compra = CompraEncontrada;
        }
    }

    

    void AgregarDetalle()
    {
        this.detalle.costo= articulos.Buscar(this.detalle.ArticuloId).Costo;
        this.compra.Detalle.Add(this.detalle);
        foreach(var item in this.compra.Detalle)
        {
            this.compra.Total += item.Importe;
        }
        this.detalle = new ComprasDetalle();
    }

    void Nuevo()
    {
        this.compra = new OrdenCompras();
    }

    void Eliminar()
    {
        if(Validar())
        {
            compras.Eliminar(this.compra);
            Nuevo();
        }
        else
        {
            Console.WriteLine("No se ha borrado nada");
        }
    }

    void Guardar()
    {
        if(Validar())
        {
            compras.Guardar(this.compra);
            this.Nuevo();
        }
        else
        {
            Console.WriteLine("No se ha guardado nada");
        }
    }

    bool Validar()
    {
        if(this.compra.Detalle != null)
        {
            return true;
        }
        else
        {
            return false;
        }
    }


    





 



}

