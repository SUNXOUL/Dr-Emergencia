@page "/C_Compra"

@inject OrdenComprasBLL compras
@inject ArticuloBLL articulos
@inject IJSRuntime IJS
@inject DialogService DialogService

<head>
<style>
        body {
            background-image: url('https://wallpaper.dog/large/903575.jpg');
            background-attachment: fixed;
            background-size: cover;
            opacity:0.9;
        }
        
        .Entrada select {
            width: 200px;
            height: 35px;
            border-radius: 50px;
            background-color: #D9D9D9;
            border-color: #D9D9D9;
            border: 15px;
            margin: 5px;
        }


</style>
</head>

    <RadzenCard class="rz-shadow-7 rz-my-12 rz-mx-auto rz-p-4 rz-p-md-12">
    <RadzenFieldset>
            <HeaderTemplate>
            <span class="d-inline-flex align-items-center align-middle">
                <RadzenIcon Icon="emergency" class="me-1" /><b>Consultar ordenes compra</b>
            </span>
        </HeaderTemplate>
        <ChildContent>
        
<RadzenButton ButtonStyle="ButtonStyle.Secondary" Click="ShowInlineDialog" ><RadzenIcon Icon="print"/>Generar Reporte</RadzenButton>
<RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false"
        FilterMode="FilterMode.Advanced" AllowGrouping="true" AllowSorting="true" AllowPaging="true"
        PagerHorizontalAlign="HorizontalAlign.Left" Data="@compras.GetList()" TItem="OrdenCompras" ColumnWidth="200px"
        LogicalFilterOperator="LogicalFilterOperator.Or" ShowPagingSummary="true">

        <Columns>
            <RadzenDataGridColumn TItem="OrdenCompras" Filterable="false" Sortable="false"  Frozen="true" Title="Acciones">
                <Template Context="Item">
                    <RadzenLink Path=@($"R_Compras/{Item.CompraId}") Text="Ver" ><RadzenBadge BadgeStyle="BadgeStyle.Secondary" Text="Ver" /></RadzenLink>
                   <button @onclick="() => Imprimir(Item.CompraId)" style="border:none;" ><RadzenBadge  BadgeStyle="BadgeStyle.Info"  Text="Imprimir"   /></button>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="OrdenCompras" Property="CompraId" Title="#ID" />
            <RadzenDataGridColumn TItem="OrdenCompras" Property="Fecha" Title="Fecha" />
            <RadzenDataGridColumn TItem="OrdenCompras" Property="Total" Title="Total compra" />
        </Columns>

    </RadzenDataGrid>
    </ChildContent>
    </RadzenFieldset>
    </RadzenCard>
    @code{
    public string eleccion{get;set;}
    public string[] opciones {get;set;} = {"Hoy","Esta Semana","Ultimos 15 dias","Este mes","Este aÃ±o","Todos"};
    async Task ShowInlineDialog()
    {
        var result = await DialogService.OpenAsync("Generar Reporte", ds =>
        @<div>
            <div class="row">
                <div class="Entrada col">
                <label for="Persona">Rango de Tiempo</label>
                        <select id="Persona" name="Persona" @bind="eleccion">
                        @foreach (var item in opciones)
                        {
                            <option value="@item"> @item</option>
                        }
                    </select>
                    <RadzenButton ButtonStyle="ButtonStyle.Secondary" Click="Imprimir"  ><RadzenIcon Icon="print"/>Imprimir</RadzenButton>
                </div>
            </div>
        </div>);
    }

    public async Task Imprimir()
    {
        await IJS.InvokeAsync<object>("open", new object[] { $"/OrdenesCompra/{Array.IndexOf(opciones, eleccion)}","_blank"});
    }
    public async Task Imprimir(int Id)
    {
        IJS.InvokeAsync<object>("open", new object[] { $"/I_OrdenCompra/{Id}","_blank"});
    }

    }