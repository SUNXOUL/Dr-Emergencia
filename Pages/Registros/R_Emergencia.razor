@page "/R_Emergencia"
<h1>Nueva Emergencia</h1>
@inject NotificationService notificationService
@inject EmergenciaBLL emergenciaBll
@inject PacienteBLL Paciente


<head>
    <link rel='stylesheet' href='https://cdn-uicons.flaticon.com/uicons-bold-rounded/css/uicons-bold-rounded.css'>
    <style>
        .Entrada {
            display: inline-block;
            padding: 5px;
            align-items: center;
        }

        .Entrada input {
            border-radius: 50px;
            background-color: #D9D9D9;
            border-color: #D9D9D9;
            border: 15px;
            margin: 5px;
        }

        .Entrada label {
            margin: 5px;
        }

        .Entrada textarea {
            background-color: #D9D9D9;
            border-color: #D9D9D9;
            border-radius: 15px;
            width: 100%;
        }

        .Form {
            display: block;
        }

        #Hallazgos input {
            width: 100%;

        }
    </style>

</head>

<body>
<RadzenTemplateForm TItem="Emergencia" Data="emergencia" Submit="Guardar" >




    <div class="Form" style="z-index: 1;">

            <div>
                <br>
                <div style="display: flex; justify-content: space-between;">
                    <div>
                        
                        <RadzenDropDown  AllowClear="true" TValue="int" Name="Paciente"
                            FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowFiltering="true"
                            class="w-100" Placeholder="Paciente"  Data="Paciente.GetList()" TextProperty="Cedula"
                            @bind-value=@emergencia.PacienteID ValueProperty="PacienteID" style="border-radius: 50px; background-color: #D9D9D9; border-color: #D9D9D9; border: 15px; margin: 5px;"
                            />
                            <RadzenRequiredValidator Component="Paciente" Text="Nombre es Campo Requerido" Popup=true Style="position: absolute"/>
                            
                    </div>

                    <div style="display: flex;">
                        <div class="Entrada" style="display: flex;">
                            <RadzenLabel >Fecha</RadzenLabel>
                            <RadzenDatePicker @bind-Value=@emergencia.Fecha ShowTime="true" HourFormat="12" DateFormat="MM/dd/yyyy h:mm tt" Name="Fecha" />
                            <RadzenRequiredValidator Component="Fecha" Text="Nombre es Campo Requerido" Popup=true Style="position: absolute"/>

                        </div>
                    </div>
                </div>

    </div>

    <div>

        <br>
        <div class="Entrada">
            <label for="M_Consulta">Motivo de Consulta:</label>
            <RadzenTextBox type="M_Consulta" id="M_Consulta" @bind-Value="emergencia.M_Consulta" name="M_Consulta"/>
            <RadzenRequiredValidator Component="M_Consulta" Text="Nombre es Campo Requerido" Popup=true Style="position: absolute"/>

        </div>

        <div class="Entrada">
            <label for="A_Relacionados">Antecedentes Relacionados:</label>
            <RadzenTextBox type="A_Relacionados" id="A_Relacionados" @bind-Value="emergencia.Antecedentes" name="A_Relacionados"/>
        </div>
        <br>
        <div class="Entrada">
            <label for="A_Previas">Atenciones Previas:</label>
            <RadzenCheckBox @bind-Value=@AP Name="Atenciones" />
        </div>

        <div class="Entrada">
            <label for="Donde">Donde?</label>
            <RadzenTextBox type="Donde" Disabled=@(!AP) id="Donde" @bind-Value="emergencia.Donde" name="Donde"/>
        </div>

        <div class="Entrada">
            <label for="M_Base">Medico Base:</label>
            <RadzenTextBox type="M_Base" id="M_Base" @bind-Value="emergencia.MedicoBase" name="M_Base"/>
        </div>

        <div class="Entrada">
            <label for="Peso">Peso:</label>
            <RadzenNumeric  id="Peso" ShowUpDown="false" style="border-radius: 50px; background-color: #D9D9D9; border-color: #D9D9D9; border: 15px; margin: 5px;" 
            @bind-Value="emergencia.Peso" name="Peso"/>
            <RadzenRequiredValidator Component="Peso" Text="Nombre es Campo Requerido" Popup=true Style="position: absolute"/>

            <label for="Peso">lbs</label>
        </div>
        <br>
        <div class="Entrada">
            <label>Signos Vitales</label>
            <label for="TA">TA:</label>
            <RadzenNumeric ShowUpDown="false" style="border-radius: 50px; background-color: #D9D9D9; border-color: #D9D9D9; border: 15px; margin: 5px;" 
            @bind-Value="emergencia.TA" name="TA"/>
            <RadzenRequiredValidator Component="TA" Text="Nombre es Campo Requerido" Popup=true Style="position: absolute"/>

            <label for="FC">FC:</label>
            <RadzenNumeric  id="FR" ShowUpDown="false" style="border-radius: 50px; background-color: #D9D9D9; border-color: #D9D9D9; border: 15px; margin: 5px;" 
            @bind-Value="emergencia.FR" name="FR"/>
            <RadzenRequiredValidator Component="FR" Text="Nombre es Campo Requerido" Popup=true Style="position: absolute"/>

            <label for="FR">FR</label>
            <RadzenNumeric  id="FC" ShowUpDown="false" style="border-radius: 50px; background-color: #D9D9D9; border-color: #D9D9D9; border: 15px; margin: 5px;" 
            @bind-Value="emergencia.FC" name="FC"/>
            <RadzenRequiredValidator Component="FC" Text="Nombre es Campo Requerido" Popup=true Style="position: absolute"/>

            <label for="Temperatura">Temperatura:</label>
            <RadzenNumeric  id="Temperatura" ShowUpDown="false" style="border-radius: 50px; background-color: #D9D9D9; border-color: #D9D9D9; border: 15px; margin: 5px;" 
            @bind-Value="emergencia.Temperatura" name="Temperatura"/>
            <RadzenRequiredValidator Component="Temperatura" Text="Nombre es Campo Requerido" Popup=true Style="position: absolute"/>

            <label for="Temperatura">C</label>
        </div>

        <RadzenTabs SelectedIndex="0">
        
        <Tabs>
    
        <RadzenTabsItem Text="Diagnostico">

 
        <div class="Entrada" id="Hallazgos" style="width: 100%;;">

            <div style="display: flex;">
                <label for="Diagnostico">Diagnostico</label>
                <RadzenTextArea style="width: 100%;"   id="Diagnostico" @bind-Value="emergencia.Diagnostico" name="Diagnostico"/>
                <RadzenRequiredValidator Component="Diagnostico" Text="Nombre es Campo Requerido" Popup=true Style="position: absolute"/>

            </div>
        </div>
        </RadzenTabsItem>
        <RadzenTabsItem Text="Laboratorio">
        <div class="Entrada" style="display: flex;">

            <br>
            <label for="Hemograma">Hemograma:</label>
            <RadzenNumeric ShowUpDown="false" style="border-radius: 50px; background-color: #D9D9D9; border-color: #D9D9D9; border: 15px; margin: 5px;" 
            id="Hemograma" @bind-Value="emergencia.Hemogramas" name="Hemograma"/>
            <label for="Ex_Orina">Ex.Orina:</label>
            <RadzenNumeric ShowUpDown="false" style="border-radius: 50px; background-color: #D9D9D9; border-color: #D9D9D9; border: 15px; margin: 5px;" 
            id="Ex_Orina" @bind-Value="emergencia.Ex_Orina" name="Ex_Orina"/>
            <label for="Glisemia">Glisemia:</label>
            <RadzenNumeric ShowUpDown="false" style="border-radius: 50px; background-color: #D9D9D9; border-color: #D9D9D9; border: 15px; margin: 5px;" 
            id="Glisemia"@bind-Value="emergencia.Glisemia" name="Glisemia"/>
            <label for="Coprologico">Coprologico:</label>
            <RadzenNumeric ShowUpDown="false" style="border-radius: 50px; background-color: #D9D9D9; border-color: #D9D9D9; border: 15px; margin: 5px;" 
            id="Coprologico" @bind-Value="emergencia.Coprologico" name="Coprologico"/>
        </div>
        <br>
        <div class="Entrada" style="display: flex; align-items: center;">
            <label for="Imagenes">Imagenes:</label>
            <RadzenNumeric ShowUpDown="false" style="border-radius: 50px; background-color: #D9D9D9; border-color: #D9D9D9; border: 15px; margin: 5px;" 
            id="Imagenes"@bind-Value="emergencia.Imagenes" name="Imagenes"/>

            <label for="Especificacion">Especifique</label>
            <RadzenTextArea  style="width: 100%;" type="number" id="Especificacion"@bind-Value="emergencia.Especifique" name="Especificacion"></RadzenTextArea>
        </div>
        </RadzenTabsItem>
        </Tabs>
        </RadzenTabs>
    </div>
    <br>
    <div class="Entrada " style="display:flex;">
        <label for="TyM">Tratamientos y Medicamentos:</label>
        <RadzenTextArea  id="TyM" style="width: 100%;" @bind-Value="emergencia.TyM" name="TyM"></RadzenTextArea>
    </div>
    </div>
    <center>
       <RadzenButton ButtonType="ButtonType.Submit" class="btn btn-primary" 
            style="padding-left: 50px;padding-right: 50px; border-radius:50px; Background-Color:#3AB5F4; border-color:#3AB5F4; margin:10px;">Registrar</RadzenButton>
    </center>
  </RadzenTemplateForm >  
</body>
@code {
    public Emergencia emergencia { get; set; } = new Emergencia();
    public Paciente? paciente = new Paciente();
    public int id {get; set;}
    bool AP {get;set;} 

    protected override void OnInitialized()
    {

        emergencia.OrdenID = 0;
    }


    private void Buscar()
    {
        var emergenciaEncontrada = emergenciaBll.Buscar(emergencia.OrdenID);
        if (emergenciaEncontrada != null)
        {
            Console.WriteLine($"Se encontro una ocupacion con el ID{this.emergencia.OrdenID}");
            this.emergencia = emergenciaEncontrada;

        }
        else
        {
            Nuevo();
            Console.WriteLine("Id no existente");
        }
    }

    void ShowNotification(NotificationMessage message)
    {
        notificationService.Notify(message);
    }

    public void Nuevo()
    {
        this.emergencia = new Emergencia();
    }

    public void Guardar()
    {
        if(Validar())
        {
            if(emergenciaBll.Guardar(this.emergencia))
                {
                    Console.WriteLine($"Se guardo en el {this.emergencia.OrdenID}");
                    this.Nuevo();
                    ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Registro Actualizado", Detail = "Guardado con Exito", Duration = 4000 });
                }
                //(Paciente.Buscar(PacienteID)).DetalleNoAseguradas.Add(new EmergenciaDetalle(PacienteID, this.emergencia.OrdenID));
        }
            else
            {
                ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Error de Registro", Detail = "Campos Vacios o mal asignados", Duration = 4000 });
            }
    }




    public void eliminar()
    {
        bool RES = emergenciaBll.Eliminar(this.emergencia);

        if (RES == false)
        {
            Console.WriteLine("Eliminado Correctamente");
            Nuevo();
        }
        else
        {
            Console.WriteLine("No se borro nada");
        }
    }

        public bool Validar()
        {
            if(this.emergencia.PacienteID !=null && this.emergencia.M_Consulta !=null && this.emergencia.AtencionesPrevias !=null && this.emergencia.Peso!=null &&this.emergencia.TA !=null && this.emergencia.FC !=null && this.emergencia.FR !=null && this.emergencia.Temperatura !=null &&  this.emergencia.Diagnostico !=null &&  this.emergencia.Fecha !=null )
            {
                System.Console.WriteLine("Pase 1");
                    return true;
            }
            else
            {
                return false;
            }
        }
}
