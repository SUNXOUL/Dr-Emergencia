@page "/R_Paciente"

@inject NotificationService notificationService
@inject PacienteBLL pacienteBll


<head>
    <style>
        .Entrada {
            display: inline-block;
            padding: 5px;
            align-items: center;
        }

        .Entrada input {
            border-radius: 50px;
            background-color: #D9D9D9;
            border-color: #D9D9D9;
            border: 15px;
            margin: 5px;
        }

        .Entrada label {
            margin: 5px;
        }

        .Entrada textarea {
            background-color: #D9D9D9;
            border-color: #D9D9D9;
            border-radius: 15px;
            width: 100%;
        }

        .Entrada select {
            width: 200px;
            height: 35px;
            border-radius: 50px;
            background-color: #D9D9D9;
            border-color: #D9D9D9;
            border: 15px;
            margin: 5px;
        }


        body {
            background-color: white;
        }
    </style>
</head>


<h1>Registrar Paciente</h1>

<RadzenTemplateForm TItem="Paciente" Data="paciente" Submit="Guardar" >
    <div class="Entrada">
        <label for="Nombre">Nombre:</label>
        <RadzenTextBox  name="Nombre" @bind-Value="paciente.PrimerNombre"/>
        <RadzenRequiredValidator Component="Nombre" Text="Nombre es Campo Requerido" Popup=true Style="position: absolute"/>

    </div>

    <div class="Entrada">
        <label for="S_Nombre">Segundo Nombre:</label>
        <RadzenTextBox @bind-Value="paciente.SegundoNombre" name="S_Nombre"/>
    </div>
    <br>
    <div class="Entrada">
        <label for="P_Apellido">Primer Apellido:</label>
        <RadzenTextBox @bind-Value="paciente.PrimerApellido"  name="P_Apellido"/>
        <RadzenRequiredValidator Component="P_Apellido" Text="Primer Apellido es Campo Requerido" Popup=true Style="position: absolute"/>
    </div>

    <div class="Entrada">
        <label for="S_Apellido">Segundo Apellido:</label>
        <RadzenTextBox @bind-Value="paciente.SegundoApellido"  name="S_Apellido"/>
        <RadzenRequiredValidator Component="S_Apellido" Text="Segundo Apellido es Campo Requerido" Popup=true Style="position: absolute"/>
    </div>
    <br>



    <div style="display: flex; align-items:center;">

    <div class="Entrada">
        <label>Sexo:</label>
        <select id="Persona" name="Persona" @bind="paciente.Sexo">
            @foreach (var item in Sexos)
            {
                <option value="@item"> @item</option>
            }

        </select>
    </div>
                        <div class="Entrada" style="display: flex;">
                            <RadzenLabel >Fecha Nacimiento</RadzenLabel>
                            <RadzenTextBox style="display: inline-block;" type="date" class="form-control" aria-label="Recipient's username"
                                aria-describedby="basic-addon2" @bind-Value="paciente.FechadeNacimiento" id="fecha" name="fecha"/>
                                <RadzenRequiredValidator Component="fecha" Text="Fecha es Campo Requerido" Popup=true Style="position: absolute"/>
                        </div>
                        </div>



    <RadzenTabs>
        <Tabs>
        <RadzenTabsItem Text="Mayor de Edad">
    <div class="Entrada">
        <label for="Cedula">Cedula:</label>
        <RadzenMask Mask="***-*******-**" Pattern="[^0-9]" Placeholder="000-0000000-00" Name="Cedula" @bind-Value=@paciente.Cedula />
        <RadzenRequiredValidator Component="Cedula" Text="Campo Requerido" Popup=true Style="position: absolute"/>
    </div>

    <div class="Entrada">
        <label for="O_Laboral">Ocupacion Laboral:</label>
        <RadzenTextBox type="O_Laboral" id="O_Laboral" @bind-Value="paciente.Ocupacion" name="O_Laboral"/>
        <RadzenRequiredValidator Component="O_Laboral" Text="Campo Requerido" Popup=true Style="position: absolute"/>
    </div>
        </RadzenTabsItem>

    <RadzenTabsItem Text="Menor de edad">
    <div class="Entrada">
        <label for="N_Tutor">Nombre Tutor:</label>
        <RadzenTextBox type="N_Tutor" id="N_Tutor" @bind-Value="paciente.Tutor" name="N_Tutor"/>
        <RadzenRequiredValidator Component="N_Tutor" Text="Campo Requerido" Popup=true Style="position: absolute"/>
    </div>

    <div class="Entrada">
        <label for="C_Tutor">Cedula Tutor:</label>
        <RadzenMask Mask="***-*******-**" Pattern="[^0-9]" Placeholder="000-0000000-00" Name="C_Tutor" @bind-Value=@paciente.CedulaTutor />
        <RadzenRequiredValidator Component="C_Tutor" Text="Campo Requerido" Popup=true Style="position: absolute"/>
    </div>
    </RadzenTabsItem>
    </Tabs>
    </RadzenTabs>

    <div class="Entrada">
        <label for="Alergias">Alergias:</label>
        <RadzenTextBox type="Alergias" id="Alergias" @bind-Value="paciente.Alergia" name="Alergias"/>
    </div>

    <div class="Entrada">
        <label for="Telefono">Telefono:</label>
        <RadzenMask Mask="(***) ***-****" Pattern="[^0-9]" Placeholder="(000) 000-0000" Name="Phone" @bind-Value=@paciente.Telefono />
    </div>

    <div class="Entrada">
        <label for="Direccion">Direccion:</label>
        <RadzenTextBox @bind-Value="paciente.Direccion" type="Direccion" id="Direccion" name="Direccion"/>
    </div>

    <div class="Entrada">
        <label for="Provincia">Provincia:</label>
        <RadzenTextBox @bind-Value="paciente.Provincia" type="Provincia" id="Provincia" name="Provincia"/>
    </div>

    <div class="Entrada">
        <label for="Municipio">Municipio:</label>
        <RadzenTextBox @bind-Value="paciente.Municipio" type="Municipio" id="Municipio" name="Municipio"/>
    </div>

    <center>
        <RadzenButton ButtonType="ButtonType.Submit" class="btn btn-primary"
            style="padding-left: 50px;padding-right: 50px; border-radius:50px; Background-Color:#3AB5F4; border-color:#3AB5F4; margin:10px;">Registrar</RadzenButton>
    </center>

</RadzenTemplateForm>



@code {
    public Paciente paciente { get; set; } = new Paciente();
    List<Sexo> Sexos = Enum.GetValues(typeof(Sexo))
    .Cast<Sexo>()
    .ToList();
    protected override void OnInitialized()
    {

    }

    void ShowNotification(NotificationMessage message)
    {
        notificationService.Notify(message);
    }

    private void Buscar()
    {
        var pacienteEncontrado = pacienteBll.Buscar(paciente.PacienteID);
        if (pacienteEncontrado != null)
        {
            Console.WriteLine($"Se encontro una ocupacion con el ID{this.paciente.PacienteID}");
            this.paciente = pacienteEncontrado;

        }
        else
        {
            Nuevo();
            Console.WriteLine("Id no existente");
        }
    }


    public void Nuevo()
    {
        this.paciente = new Paciente();
    }

    public void Guardar()
    {
        if(Validar())
        {
            if(pacienteBll.Guardar(this.paciente))
            {
                Console.WriteLine($"{this.paciente.PrimerNombre} Se guardo en el {this.paciente.PacienteID}");
                this.Nuevo();
                ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Registro Actualizado", Detail = "Guardado con Exito", Duration = 4000 });
            }
        }
        else
        {
            ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Error de Registro", Detail = "Campos Vacios o mal asignados", Duration = 4000 });
        }


        //Console.WriteLine("Campos no validos o no completados");
    }




    public void eliminar()
    {
        bool RES = pacienteBll.Eliminar(this.paciente);

        if (RES == false)
        {
            Console.WriteLine("Eliminado Correctamente");
            Nuevo();
        }
        else
        {
            Console.WriteLine("No se borro nada");
        }

    }
        public bool Validar()
        {
            if(this.paciente.PrimerApellido !=null && this.paciente.SegundoApellido !=null && this.paciente.PrimerNombre !=null  && this.paciente.FechadeNacimiento !=null )
            {
                System.Console.WriteLine("Pase 1");
                if( this.paciente.Tutor!=null && this.paciente.CedulaTutor !=null || this.paciente.Ocupacion!=null && this.paciente.Cedula !=null )
                {
                    return true;
                }
                else
                {
                    return false;
                }
                
            }
            else
            {
                return false;
            }
        }


}
