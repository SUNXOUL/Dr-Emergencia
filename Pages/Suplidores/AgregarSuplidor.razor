@page "/R_Suplidores"


@inject SuplidorBLL suplidores
@inject NotificationService notificationService

<head>
    <style>
        .Entrada {
            display: inline-block;
            padding: 5px;
            align-items: center;
        }

        .Entrada input {
            border-radius: 50px;
            background-color: #D9D9D9;
            border-color: #D9D9D9;
            border: 15px;
            margin: 5px;
        }

        .Entrada label {
            margin: 5px;
        }

        .Entrada textarea {
            background-color: #D9D9D9;
            border-color: #D9D9D9;
            border-radius: 15px;
            width: 100%;
        }

        .Entrada select {
            width: 200px;
            height: 35px;
            border-radius: 50px;
            background-color: #D9D9D9;
            border-color: #D9D9D9;
            border: 15px;
            margin: 5px;
        }


        body {
            background-color: white;
        }
    </style>
</head>

<body>
    

<h1>Registrar Suplidores</h1>


    <div class="Entrada">
        <label for="Nombre">Nombre:</label>
        <RadzenTextBox  name="Nombre" @bind-Value="suplidor.Nombre"/>
    </div>
    <div class="Entrada">
        <label for="Contacto">Contacto:</label>
        <RadzenMask Mask="***-***-****" Pattern="[^0-9]" Placeholder="000-000-0000" Name="Phone" @bind-Value=@suplidor.Contacto/>
    </div>

    <center>
        <button type="button" class="btn btn-primary"
            style="padding-left: 50px;padding-right: 50px; border-radius:50px; Background-Color:#3AB5F4; border-color:#3AB5F4; margin:10px;"
            @onclick="Guardar">Guardar</button>
    </center>


</body>
@code {
    public Suplidor suplidor {get; set; } = new Suplidor();
    
    protected override void OnInitialized()
    {

    }

    void ShowNotification(NotificationMessage message)
    {
        notificationService.Notify(message);
    }

    private void Buscar()
    {
        var suplidorEncontrado = suplidores.Buscar(suplidor.SuplidorID);
        if (suplidorEncontrado != null)
        {
            Console.WriteLine($"Se encontro una ocupacion con el ID{this.suplidor.SuplidorID}");
            this.suplidor = suplidorEncontrado;

        }
        else
        {
            Nuevo();
            Console.WriteLine("Id no existente");
        }
    }


    public void Nuevo()
    {
        this.suplidor = new Suplidor();
    }

    public void Guardar()
    {

        if(suplidores.Guardar(this.suplidor))
        {
            this.Nuevo();
            ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Registro Actualizado", Detail = "Guardado con Exito", Duration = 4000 });
        }

        //Console.WriteLine("Campos no validos o no completados");
    }


}


