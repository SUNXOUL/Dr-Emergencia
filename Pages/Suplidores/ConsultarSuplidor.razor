@page "/C_Suplidor"



@inject SuplidorBLL Suplidor
@inject IJSRuntime IJS
@inject DialogService DialogService


<head>
    <style>
        .hidden{
            display: none;
        }

        .form-select{
            border: none;
            width: 150px;
        }
        .form-floating {
            width: 15%;
        }
            .Entrada{
        display: inline-block;
        padding: 5px;
        align-items: center;
    }
    .Entrada input{
        border-radius: 50px;
        background-color:#D9D9D9;
        border-color: #D9D9D9;
        border: 15px;
        margin: 5px;
    }
    .Entrada label
    {
        margin: 5px;
    }
    .Entrada textarea{
        background-color:#D9D9D9;
        border-color: #D9D9D9;
        border-radius: 15px;
        width: 100%;
    }

            body {
            background-image: url('https://wallpaper.dog/large/903575.jpg');
            background-attachment: fixed;
            background-size: cover;
            opacity:0.9;
        }
                .Entrada select {
            width: 200px;
            height: 35px;
            border-radius: 50px;
            background-color: #D9D9D9;
            border-color: #D9D9D9;
            border: 15px;
            margin: 5px;
        }

    </style>
</head>
    
    <body>
    
    <RadzenCard class="rz-shadow-7 rz-my-12 rz-mx-auto rz-p-4 rz-p-md-12">
    <RadzenFieldset>
            <HeaderTemplate>
            <span class="d-inline-flex align-items-center align-middle">
                <RadzenIcon Icon="search" class="me-1" /><b>Consultar Suplidor</b>
            </span>
        </HeaderTemplate>
        <ChildContent>

    <RadzenButton ButtonStyle="ButtonStyle.Secondary" Click="ShowInlineDialog" ><RadzenIcon Icon="print"/>Generar Reporte</RadzenButton>
    <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced"
    AllowGrouping="true" AllowSorting="true" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left"
    Data="Suplidor.GetList()" TItem="Suplidor" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or" ShowPagingSummary="true">

        <Columns>
                    <RadzenDataGridColumn Filterable="false" Sortable="false" TItem="Suplidor" Frozen="true" Title="Acciones">
                <Template Context="Item">
                    <RadzenLink Path=@($"V_Suplidor/{Item.SuplidorID}") Text="Ver" ><RadzenBadge BadgeStyle="BadgeStyle.Secondary" Text="Ver" /></RadzenLink>
                </Template>
                    </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Suplidor" Property="SuplidorID" Title="#ID" />
            <RadzenDataGridColumn TItem="Suplidor" Property="Nombre" Title="Nombre" />
            <RadzenDataGridColumn TItem="Suplidor" Property="Contacto" Title="Contacto" />
        
        </Columns>

    </RadzenDataGrid>

        </ChildContent>
    </RadzenFieldset>
    </RadzenCard>
    </body>


@code {

    private List<Suplidor> Supliers {get; set;} = new List<Suplidor>();
    
    public string eleccion{get;set;}
    public string[] opciones {get;set;} = {"Hoy","Esta Semana","Ultimos 15 dias","Este mes","Este año","Todos"};
    
    async Task ShowInlineDialog()
    {
        var result = await DialogService.OpenAsync("Generar Reporte", ds =>
        @<div>
            <div class="row">
                <div class="Entrada col">
                <label for="Persona">Rango de Tiempo</label>
                        <select id="Persona" name="Persona" @bind="eleccion">
                        @foreach (var item in opciones)
                        {
                            <option value="@item"> @item</option>
                        }
                    </select>
                    <RadzenButton ButtonStyle="ButtonStyle.Secondary" Click="Imprimir"  ><RadzenIcon Icon="print"/>Imprimir</RadzenButton>
                </div>
            </div>
        </div>);
    }

    public async Task Imprimir()
    {
        await IJS.InvokeAsync<object>("open", new object[] { $"/Suplidores/{Array.IndexOf(opciones, eleccion)}","_blank"});
    }

    protected override void OnInitialized()
    {
        Supliers = Suplidor.GetList();
    }
    
}

