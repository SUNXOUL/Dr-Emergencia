@page "/V_Suplidor"
@page "/V_SUplidor/{SuplidorID:int}"
@inject NotificationService notificationService
@inject SuplidorBLL suplidores



    <head>
        <style>
    .Entrada{
        display: inline-block;
        padding: 5px;
        align-items: center;
    }
    .Entrada input{
        border-radius: 50px;
        background-color:#D9D9D9;
        border-color: #D9D9D9;
        border: 15px;
        margin: 5px;
    }
    .Entrada label
    {
        margin: 5px;
    }
    .Entrada textarea{
        background-color:#D9D9D9;
        border-color: #D9D9D9;
        border-radius: 15px;
        width: 100%;
    }
            .Entrada select {
            width: 200px;
            height: 35px;
            border-radius: 50px;
            background-color: #D9D9D9;
            border-color: #D9D9D9;
            border: 15px;
            margin: 5px;
        }
    
    body
    {
        background-color: white;
    }
        </style>
    </head>

    <body>
        <h1>Ver Suplidor</h1>

  <EditForm model="Suplidor">
    <div class="Entrada">
        <label for="Nombre">Nombre:</label>
        <RadzenTextBox Disabled=true  name="Nombre" @bind-Value="suplidor.Nombre"/>
    </div>

    <div class="Entrada"> 
        <label for="Contacto">Contacto:</label>
        <RadzenMask Disabled=true Mask="***-***-****" Pattern="[^0-9]" Placeholder="000-000-0000" Name="Phone" @bind-Value=@suplidor.Contacto/>
    </div>
    <br>

     

    <center>
        <a href="/E_Suplidor/@SuplidorID"> <button type="button" class="btn btn-primary" style="padding-left: 50px;padding-right: 50px; border-radius:50px; Background-Color:#3AB5F4; border-color:#3AB5F4; margin:10px;" >Editar</button></a>
        <a href="/"><button type="button" class="btn btn-danger" style="padding-left: 50px;padding-right: 50px; border-radius:50px; margin:10px;" @onclick="Eliminar">Eliminar</button></a>

    </center>

    </EditForm>
    
</body>

@code {
    [Parameter]
    public int SuplidorID{get;set;}
    public Suplidor suplidor{get; set;} = new Suplidor();
 
    protected override void OnInitialized(){
        if(SuplidorID>0){
            Buscar();
        }
    }

    private void Buscar()
    {
        Suplidor? suplidorEncontrado = suplidores.Buscar(this.SuplidorID);
        if(suplidorEncontrado != null)
        {
            Console.WriteLine($"Se encontro una ocupacion con el ID {this.suplidor.SuplidorID}");
            this.suplidor = suplidorEncontrado;
            System.Console.WriteLine(suplidor.Nombre);
        }
        
    }
    public void chState()
    {
        
    }
    void ShowNotification(NotificationMessage message)
    {
        notificationService.Notify(message);
    }
    public void Eliminar(){
        suplidores.hidden(this.suplidor);
        ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Registro Actualizado", Detail = "Eliminado con Exito", Duration = 4000 });
    }
}

